import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

interface Chat {
  id: string;
  name: string;
  lastMessage: string;
  time: string;
  avatar: string;
  isEncrypted: boolean;
  unreadCount?: number;
  type: 'personal' | 'group' | 'channel';
}

interface User {
  name: string;
  status: string;
  avatar: string;
}

const SibCHAT: React.FC = () => {
  const [activeTab, setActiveTab] = useState('chats');
  const [searchQuery, setSearchQuery] = useState('');

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const chats: Chat[] = [
    {
      id: '1',
      name: '–ú–µ–¥–≤–µ–¥—å –ú–∏—Ö–∞–ª—ã—á',
      lastMessage: '–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞ –≤ —Ç–∞–π–≥–µ?',
      time: '14:32',
      avatar: 'üêª',
      isEncrypted: true,
      unreadCount: 2,
      type: 'personal'
    },
    {
      id: '2',
      name: '–ë–∞–π–∫–∞–ª—å—Å–∫–∏–µ –†—ã–±–∞–∫–∏',
      lastMessage: '–ó–∞–≤—Ç—Ä–∞ –∏–¥—ë–º –Ω–∞ –ª—ë–¥! üé£',
      time: '13:15',
      avatar: 'üé£',
      isEncrypted: true,
      unreadCount: 5,
      type: 'group'
    },
    {
      id: '3',
      name: '–ù–æ–≤–æ—Å—Ç–∏ –°–∏–±–∏—Ä–∏',
      lastMessage: '–°–µ–≥–æ–¥–Ω—è —Å–µ–≤–µ—Ä–Ω–æ–µ —Å–∏—è–Ω–∏–µ –±—É–¥–µ—Ç –æ—Å–æ–±–µ–Ω–Ω–æ —è—Ä–∫–∏–º',
      time: '12:08',
      avatar: 'üåå',
      isEncrypted: false,
      type: 'channel'
    },
    {
      id: '4',
      name: '–°–æ–±–æ–ª—å –°–µ—Ä—ë–∂–∞',
      lastMessage: '–í —Ç–∞–π–≥–µ —Å–≤—è–∑—å –ø–ª–æ—Ö–∞—è, –ø–∏—à—É –ø–æ–∑–∂–µ',
      time: '11:45',
      avatar: 'ü¶´',
      isEncrypted: true,
      type: 'personal'
    }
  ];

  const user: User = {
    name: '–ò–≤–∞–Ω –°–µ–≤–µ—Ä–Ω—ã–π',
    status: '–í —Ç–∞–π–≥–µ, –Ω–æ –Ω–∞ —Å–≤—è–∑–∏',
    avatar: 'üßä'
  };

  const filteredChats = chats.filter(chat => 
    chat.name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  const getTabIcon = (tab: string) => {
    switch (tab) {
      case 'chats': return 'MessageCircle';
      case 'groups': return 'Users';
      case 'channels': return 'Radio';
      case 'profile': return 'User';
      case 'taiga': return 'MapPin';
      case 'settings': return 'Settings';
      case 'archive': return 'Archive';
      case 'shaman': return 'Sparkles';
      default: return 'MessageCircle';
    }
  };

  const getTabLabel = (tab: string) => {
    switch (tab) {
      case 'chats': return '–ß–∞—Ç—ã';
      case 'groups': return '–°—Ç–æ–π–±–∏—â–∞';
      case 'channels': return '–ö–∞–Ω–∞–ª—ã';
      case 'profile': return '–ò–∑–±—É—à–∫–∞';
      case 'taiga': return '–¢–∞–π–≥–∞';
      case 'settings': return '–ù–∞—Å—Ç—Ä–æ–π–∫–∏';
      case 'archive': return '–õ–µ–¥—è–Ω–æ–π —è—â–∏–∫';
      case 'shaman': return '–®–∞–º–∞–Ω-–±–æ—Ç';
      default: return tab;
    }
  };

  const renderChatItem = (chat: Chat) => (
    <Card key={chat.id} className="mb-3 hover:bg-secondary/50 transition-all duration-200 cursor-pointer group bear-tracks">
      <CardContent className="p-4">
        <div className="flex items-center space-x-3">
          <div className="relative">
            <Avatar className="h-12 w-12">
              <AvatarFallback className="text-xl bg-gradient-to-br from-siberian-ice to-siberian-river">
                {chat.avatar}
              </AvatarFallback>
            </Avatar>
            {chat.isEncrypted && (
              <div className="absolute -bottom-1 -right-1 bg-siberian-forest rounded-full p-1">
                <Icon name="Shield" size={12} className="text-white" />
              </div>
            )}
          </div>
          <div className="flex-1 min-w-0">
            <div className="flex items-center justify-between">
              <h3 className="font-montserrat font-semibold text-foreground truncate">
                {chat.name}
              </h3>
              <div className="flex items-center space-x-2">
                {chat.unreadCount && (
                  <Badge variant="destructive" className="bg-siberian-sunset">
                    {chat.unreadCount}
                  </Badge>
                )}
                <span className="text-sm text-muted-foreground">{chat.time}</span>
              </div>
            </div>
            <p className="text-sm text-muted-foreground truncate mt-1">
              {chat.lastMessage}
            </p>
          </div>
        </div>
      </CardContent>
    </Card>
  );

  const renderProfile = () => (
    <div className="space-y-6">
      {/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <Card className="aurora relative overflow-hidden">
        <div className="absolute inset-0 opacity-10">
          <div className="snowflake absolute top-4 left-4 text-white">‚ùÑÔ∏è</div>
          <div className="snowflake absolute top-8 right-8 text-white" style={{animationDelay: '1s'}}>‚ùÑÔ∏è</div>
          <div className="snowflake absolute bottom-6 left-1/2 text-white" style={{animationDelay: '2s'}}>‚ùÑÔ∏è</div>
        </div>
        <CardContent className="p-6 text-center relative z-10">
          <Avatar className="h-24 w-24 mx-auto mb-4 border-4 border-white/50">
            <AvatarFallback className="text-4xl bg-transparent">
              {user.avatar}
            </AvatarFallback>
          </Avatar>
          <h2 className="font-montserrat text-2xl font-bold text-white mb-2">{user.name}</h2>
          <p className="text-white/90">{user.status}</p>
        </CardContent>
      </Card>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-2 gap-4">
        <Card>
          <CardContent className="p-4 text-center">
            <div className="text-2xl font-bold text-siberian-forest">127</div>
            <div className="text-sm text-muted-foreground">–°–æ–æ–±—â–µ–Ω–∏–π</div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-4 text-center">
            <div className="text-2xl font-bold text-siberian-sunset">8</div>
            <div className="text-sm text-muted-foreground">–°—Ç–æ–π–±–∏—â</div>
          </CardContent>
        </Card>
      </div>

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è */}
      <Card>
        <CardHeader>
          <CardTitle className="font-montserrat flex items-center gap-2">
            <Icon name="Settings" size={20} />
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–±—É—à–∫–∏
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          <Button variant="ghost" className="w-full justify-start">
            <Icon name="Palette" size={18} className="mr-3" />
            –°–º–µ–Ω–∏—Ç—å –æ–∫—Ä–∞—Å —à–∫—É—Ä—ã
          </Button>
          <Button variant="ghost" className="w-full justify-start">
            <Icon name="Bell" size={18} className="mr-3" />
            –ó–≤—É–∫–∏ —Ç–∞–π–≥–∏
          </Button>
          <Button variant="ghost" className="w-full justify-start">
            <Icon name="Shield" size={18} className="mr-3" />
            –ó–∞—â–∏—Ç–∞ –æ—Ç –º–µ–¥–≤–µ–¥–µ–π
          </Button>
        </CardContent>
      </Card>
    </div>
  );

  const renderTaiga = () => (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="font-montserrat flex items-center gap-2">
            <Icon name="MapPin" size={20} />
            –ö–∞—Ä—Ç–∞ —Ç–∞–π–≥–∏
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="bg-gradient-to-br from-siberian-forest to-siberian-river rounded-lg h-48 flex items-center justify-center text-white">
            <div className="text-center">
              <Icon name="Map" size={48} className="mx-auto mb-2" />
              <p className="font-montserrat">–û—Ñ—Ñ–ª–∞–π–Ω –∫–∞—Ä—Ç—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...</p>
              <p className="text-sm opacity-75">–ì–æ—Ç–æ–≤–∏–º –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –æ—Ö–æ—Ç–Ω–∏–∫–æ–≤ –∏ —Ä—ã–±–∞–∫–æ–≤</p>
            </div>
          </div>
        </CardContent>
      </Card>

      <div className="grid grid-cols-2 gap-4">
        <Card>
          <CardContent className="p-4 text-center">
            <Icon name="Thermometer" size={24} className="mx-auto mb-2 text-siberian-river" />
            <div className="font-bold">-15¬∞C</div>
            <div className="text-sm text-muted-foreground">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞</div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="p-4 text-center">
            <Icon name="Wind" size={24} className="mx-auto mb-2 text-siberian-sunset" />
            <div className="font-bold">12 –∫–º/—á</div>
            <div className="text-sm text-muted-foreground">–°–µ–≤–µ—Ä–Ω—ã–π –≤–µ—Ç–µ—Ä</div>
          </CardContent>
        </Card>
      </div>
    </div>
  );

  const renderShaman = () => (
    <div className="space-y-6">
      <Card className="relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-siberian-sunset/20 to-siberian-forest/20"></div>
        <CardHeader className="relative z-10">
          <CardTitle className="font-montserrat flex items-center gap-2">
            <Icon name="Sparkles" size={20} />
            –®–∞–º–∞–Ω-–±–æ—Ç
          </CardTitle>
        </CardHeader>
        <CardContent className="relative z-10">
          <div className="text-center py-8">
            <div className="text-6xl mb-4">üîÆ</div>
            <h3 className="font-montserrat text-xl font-bold mb-2">–ú—É–¥—Ä—ã–π —à–∞–º–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è!</h3>
            <p className="text-muted-foreground mb-6">–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –¥—É—Ö–∞–º —Ç–∞–π–≥–∏ –∏–ª–∏ —É–∑–Ω–∞–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã</p>
            
            <div className="space-y-3">
              <Button className="w-full bg-siberian-forest hover:bg-siberian-forest/90">
                <Icon name="CloudSnow" size={18} className="mr-2" />
                –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã
              </Button>
              <Button variant="outline" className="w-full">
                <Icon name="Heart" size={18} className="mr-2" />
                –ì–∞–¥–∞–Ω–∏–µ –Ω–∞ –ª—é–±–æ–≤—å
              </Button>
              <Button variant="outline" className="w-full">
                <Icon name="TrendingUp" size={18} className="mr-2" />
                –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —É–¥–∞—á–∏
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle className="font-montserrat text-lg">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è</CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          <div className="p-3 bg-muted rounded-lg">
            <p className="text-sm">"–ó–∞–≤—Ç—Ä–∞ —Å–µ–≤–µ—Ä–Ω–æ–µ —Å–∏—è–Ω–∏–µ –ø–æ–¥–∞—Ä–∏—Ç —É–¥–∞—á—É –≤ —Ä—ã–±–∞–ª–∫–µ"</p>
            <span className="text-xs text-muted-foreground">2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥</span>
          </div>
          <div className="p-3 bg-muted rounded-lg">
            <p className="text-sm">"–ë–µ—Ä–µ–≥–∏—Å—å –º–µ–¥–≤–µ–¥—è –Ω–∞ –≤–æ—Å—Ç–æ—á–Ω–æ–π —Ç—Ä–æ–ø–µ"</p>
            <span className="text-xs text-muted-foreground">–í—á–µ—Ä–∞</span>
          </div>
        </CardContent>
      </Card>
    </div>
  );

  return (
    <div className="min-h-screen bg-background">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <header className="bg-white/80 backdrop-blur-sm border-b border-border sticky top-0 z-50">
        <div className="max-w-2xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-gradient-to-br from-siberian-forest to-siberian-river rounded-full flex items-center justify-center">
                <span className="text-white font-bold text-lg">S</span>
              </div>
              <div>
                <h1 className="font-montserrat text-xl font-bold text-foreground">SibCHAT</h1>
                <p className="text-xs text-muted-foreground">–°–∏–±–∏—Ä—Å–∫–∏–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä</p>
              </div>
            </div>
            <div className="flex items-center space-x-2">
              <Button variant="ghost" size="sm">
                <Icon name="Search" size={18} />
              </Button>
              <Button variant="ghost" size="sm">
                <Icon name="Plus" size={18} />
              </Button>
            </div>
          </div>
        </div>
      </header>

      <div className="max-w-2xl mx-auto px-4 py-6">
        <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
          {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
          <TabsList className="grid w-full grid-cols-4 lg:grid-cols-8 mb-6 bg-muted">
            {['chats', 'groups', 'channels', 'profile', 'taiga', 'settings', 'archive', 'shaman'].map((tab) => (
              <TabsTrigger 
                key={tab} 
                value={tab} 
                className="flex flex-col items-center p-2 data-[state=active]:bg-primary data-[state=active]:text-primary-foreground"
              >
                <Icon name={getTabIcon(tab)} size={16} />
                <span className="text-xs mt-1 hidden lg:block">{getTabLabel(tab)}</span>
              </TabsTrigger>
            ))}
          </TabsList>

          {/* –ß–∞—Ç—ã */}
          <TabsContent value="chats" className="space-y-4">
            <div className="relative">
              <Icon name="Search" size={18} className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground" />
              <Input
                placeholder="–ü–æ–∏—Å–∫ –≤ —á–∞—Ç–∞—Ö..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="pl-10"
              />
            </div>
            <div className="space-y-2">
              {filteredChats.map(renderChatItem)}
            </div>
          </TabsContent>

          {/* –°—Ç–æ–π–±–∏—â–∞ (–≥—Ä—É–ø–ø—ã) */}
          <TabsContent value="groups" className="space-y-4">
            <div className="space-y-2">
              {filteredChats.filter(chat => chat.type === 'group').map(renderChatItem)}
            </div>
            {filteredChats.filter(chat => chat.type === 'group').length === 0 && (
              <div className="text-center py-8 text-muted-foreground">
                <Icon name="Users" size={48} className="mx-auto mb-4 opacity-50" />
                <p>–°—Ç–æ–π–±–∏—â–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
              </div>
            )}
          </TabsContent>

          {/* –ö–∞–Ω–∞–ª—ã */}
          <TabsContent value="channels" className="space-y-4">
            <div className="space-y-2">
              {filteredChats.filter(chat => chat.type === 'channel').map(renderChatItem)}
            </div>
          </TabsContent>

          {/* –ò–∑–±—É—à–∫–∞ (–ø—Ä–æ—Ñ–∏–ª—å) */}
          <TabsContent value="profile">
            {renderProfile()}
          </TabsContent>

          {/* –¢–∞–π–≥–∞ (–∫–∞—Ä—Ç—ã) */}
          <TabsContent value="taiga">
            {renderTaiga()}
          </TabsContent>

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
          <TabsContent value="settings" className="space-y-4">
            <Card>
              <CardHeader>
                <CardTitle className="font-montserrat">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <Button variant="ghost" className="w-full justify-start">
                  <Icon name="Moon" size={18} className="mr-3" />
                  –ü–æ–ª—è—Ä–Ω–∞—è –Ω–æ—á—å (—Ç—ë–º–Ω–∞—è —Ç–µ–º–∞)
                </Button>
                <Button variant="ghost" className="w-full justify-start">
                  <Icon name="Volume2" size={18} className="mr-3" />
                  –ó–≤—É–∫–∏ —Å–∏–±–∏—Ä—Å–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã
                </Button>
                <Button variant="ghost" className="w-full justify-start">
                  <Icon name="Languages" size={18} className="mr-3" />
                  –Ø–∑—ã–∫–∏ –Ω–∞—Ä–æ–¥–æ–≤ –°–∏–±–∏—Ä–∏
                </Button>
              </CardContent>
            </Card>
          </TabsContent>

          {/* –õ–µ–¥—è–Ω–æ–π —è—â–∏–∫ (–∞—Ä—Ö–∏–≤) */}
          <TabsContent value="archive" className="space-y-4">
            <div className="text-center py-8 text-muted-foreground">
              <Icon name="Archive" size={48} className="mx-auto mb-4 opacity-50" />
              <p>–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Ç—ã –∑–∞–º–æ—Ä–æ–∂–µ–Ω—ã</p>
              <p className="text-sm">–ó–¥–µ—Å—å –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —Å—Ç–∞—Ä—ã–µ –±–µ—Å–µ–¥—ã</p>
            </div>
          </TabsContent>

          {/* –®–∞–º–∞–Ω-–±–æ—Ç */}
          <TabsContent value="shaman">
            {renderShaman()}
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default SibCHAT;